curve(x^2, -2,2)
curve(x^3, -2,2)
curve(y^2, -2,2)
a2<-curve(x^2, -2,2)
a3<-curve(x^3, -2,2)
plot(a2)
line(a3)
lines(a3)
lines(a2)
?curve
supreme<-3.0 #$/gallon
diesel<-2.6  #$/gallon
p_cost <- 19080 #$
g_cost <- 25200 #$
f_cost <- 15650 #$
mpg_p <- 53 # miles/gallon
mpg_g <- 30 # miles/gallon
mpg_f <- 33 # miles/gallon
prius<-curve((supreme/mpg_p)*x+p_cost,0,100000)
golf<-curve((supreme/mpg_g)*x+g_cost,0,100000)
fit<-curve((supreme/mpg_f)*x+f_cost,0,100000)
plot(prius)
opt <- options("scipen" = 20)
plot(prius)
?plot
plot(prius,type='l', col="green")
lines(fit,col="blue")
?lines
?>plot
?plot
opt <- options("scipen" = 20)
plot(prius,type='l', lwd=2, col="green")
lines(golf, lwd=2, col="red")
lines(fit,lwd=2, col="blue")
prius<-curve((supreme/mpg_p)*x+p_cost,0,200000)
golf<-curve((supreme/mpg_g)*x+g_cost,0,200000)
fit<-curve((supreme/mpg_f)*x+f_cost,0,200000)
plot(golf,type='l', lwd=2, col="red")
lines(prius, lwd=2, col="green")
lines(fit,lwd=2, col="blue")
?plot
opt <- options("scipen" = 20)
plot(golf,type='l', lwd=2, col="red", xlab="Miles traveled", ylab="Cumulative Cost ($)")
lines(prius, lwd=2, col="green")
lines(fit,lwd=2, col="blue")
xlab()
legend("topleft", "(Prius, Golf, Fit)")
main("Comparisons of costs")
opt <- options("scipen" = 20)
plot(golf,type='l', lwd=2, col="red", xlab="Miles traveled", ylab="Cumulative Cost ($)", main="Lifetime cost comparison")
lines(prius, lwd=2, col="green")
lines(fit,lwd=2, col="blue")
legend("topleft", ("Prius", "Golf", "Fit")
legend("topleft", ("Prius", "Golf", "Fit"))
legend("topleft", c("Prius", "Golf", "Fit"))
legend("topleft", c("Prius", "Golf", "Fit"), lty=c(1,1,1), lwd=c(2,2,2),col=c("red", "green","blue"))
legend("topleft", c("Golf","Prius", "Fit"), lty=c(1,1,1), lwd=c(2,2,2),col=c("red", "green","blue"))
supreme<-3.0 #$/gallon
diesel<-2.6  #$/gallon
p_cost <- 19080 #$
g_cost <- 25200 #$
f_cost <- 15650 #$
mpg_p <- 53 # miles/gallon
mpg_g <- 30 # miles/gallon
mpg_f <- 33 # miles/gallon
prius<-curve((supreme/mpg_p)*x+p_cost,0,200000)
golf<-curve((supreme/mpg_g)*x+g_cost,0,200000)
fit<-curve((supreme/mpg_f)*x+f_cost,0,200000)
opt <- options("scipen" = 20)
plot(golf,type='l', ylim=c(10000,50000)lwd=2, col="red", xlab="Miles traveled", ylab="Cumulative Cost ($)", main="Lifetime cost comparison")
lines(prius, lwd=2, col="green")
lines(fit,lwd=2, col="blue")
legend("topleft", c("Golf","Prius", "Fit"), lty=c(1,1,1), lwd=c(2,2,2),col=c("red", "green","blue"))
opt <- options("scipen" = 20)
plot(golf,type='l', ylim=c(10000,50000),lwd=2, col="red", xlab="Miles traveled", ylab="Cumulative Cost ($)", main="Lifetime cost comparison")
lines(prius, lwd=2, col="green")
lines(fit,lwd=2, col="blue")
legend("topleft", c("Golf","Prius", "Fit"), lty=c(1,1,1), lwd=c(2,2,2),col=c("red", "green","blue"))
p_cost <- 19080 #$
supreme<-3.0 #$/gallon
diesel<-2.6  #$/gallon
p_cost <- 19080 #$
g_cost <- 22345+820 #$
f_cost <- 15650 #$
mpg_p <- 53 # miles/gallon
mpg_g <- 30 # miles/gallon
mpg_f <- 33 # miles/gallon
prius<-curve((supreme/mpg_p)*x+p_cost,0,200000)
golf<-curve((diesel/mpg_g)*x+g_cost,0,200000)
fit<-curve((supreme/mpg_f)*x+f_cost,0,200000)
opt <- options("scipen" = 20)
plot(golf,type='l', ylim=c(10000,50000),lwd=2, col="red", xlab="Miles traveled", ylab="Cumulative Cost ($)", main="Lifetime cost comparison")
lines(prius, lwd=2, col="green")
lines(fit,lwd=2, col="blue")
legend("topleft", c("Golf","Prius", "Fit"), lty=c(1,1,1), lwd=c(2,2,2),col=c("red", "green","blue"))
supreme<-3.0 #$/gallon
diesel<-2.6  #$/gallon
p_cost <- 19080 #$
g_cost <- 22345+820 #$
f_cost <- 16532+820 #$
mpg_p <- 53 # miles/gallon
mpg_g <- 30 # miles/gallon
mpg_f <- 33 # miles/gallon
prius<-curve((supreme/mpg_p)*x+p_cost,0,200000)
golf<-curve((diesel/mpg_g)*x+g_cost,0,200000)
fit<-curve((supreme/mpg_f)*x+f_cost,0,200000)
opt <- options("scipen" = 20)
plot(golf,type='l', ylim=c(10000,50000),lwd=2, col="red", xlab="Miles traveled", ylab="Cumulative Cost ($)", main="Lifetime cost comparison")
lines(prius, lwd=2, col="green")
lines(fit,lwd=2, col="blue")
legend("topleft", c("Golf","Prius", "Fit"), lty=c(1,1,1), lwd=c(2,2,2),col=c("red", "green","blue"))
supreme<-3.0 #$/gallon
diesel<-2.6  #$/gallon
p_cost <- 21244 #$
g_cost <- 22345+820 #$
f_cost <- 16532+820 #$
mpg_p <- 53 # miles/gallon
mpg_g <- 30 # miles/gallon
mpg_f <- 33 # miles/gallon
prius<-curve((supreme/mpg_p)*x+p_cost,0,200000)
golf<-curve((diesel/mpg_g)*x+g_cost,0,200000)
fit<-curve((supreme/mpg_f)*x+f_cost,0,200000)
opt <- options("scipen" = 20)
plot(golf,type='l', ylim=c(10000,50000),lwd=2, col="red", xlab="Miles traveled", ylab="Cumulative Cost ($)", main="Lifetime cost comparison")
lines(prius, lwd=2, col="green")
lines(fit,lwd=2, col="blue")
legend("topleft", c("Golf","Prius", "Fit"), lty=c(1,1,1), lwd=c(2,2,2),col=c("red", "green","blue"))
g_cost <- 22345+820 #$
supreme<-3.0 #$/gallon
diesel<-2.6  #$/gallon
p_cost <- 21244 #$
g_cost <- 22345+820 #$
f_cost <- 16532+820 #$
mpg_p <- 53 # miles/gallon
mpg_g <- 30 # miles/gallon
mpg_f <- 33 # miles/gallon
prius<-curve((supreme/mpg_p)*x+p_cost,0,200000)
golf<-curve((diesel/mpg_g)*x+g_cost,0,200000)
fit<-curve((supreme/mpg_f)*x+f_cost,0,200000)
opt <- options("scipen" = 20)
plot(golf,type='l', ylim=c(10000,50000),lwd=2, col="red", xlab="Miles traveled", ylab="Cumulative Cost ($)", main="Lifetime cost comparison")
lines(prius, lwd=2, col="green")
lines(fit,lwd=2, col="blue")
legend("topleft", c("Golf","Prius", "Fit"), lty=c(1,1,1), lwd=c(2,2,2),col=c("red", "green","blue"))
install.packages("swirl")
library(swirl)
install_from_swirl("Getting and Cleaning Data")
swirl()
swirl()
install.packages("dplyr")
swirl()
swirl()
getOption("repos")
getOption("repos")
options(repos = c(CRAN = "http://cran.rstudio.com"))
getOption("repos")
getOption("repos")
getOption("repos")
swirl()
library(swirl)
swirl()
options(repos = c(CRAN = "http://cran.rstudio.com"))
swirl()
getOption("repos")
options(repos = c(CRAN = "http://cran.rstudio.com"))
getOption("repos")
install.packages("swirl")
install.packages("dlpyr")
install.packages("dplyr")
install.packages("dplyr")
setwd("C:\\Users\\dkh320\\Desktop\\Coursera\\Getting-and-Cleaning-Data\\Quiz3")
gdpUrl<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
eduUrl<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
download.file(gdpUrl, destfile="./data/gdp.csv",mode="wb")
download.file(eduUrl, destfile="./data/edu.csv",mode="wb")
setwd("C:\\Users\\dkh320\\Desktop\\Coursera\\Getting-and-Cleaning-Data\\Quiz3")
gdpUrl<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
eduUrl<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
download.file(gdpUrl, destfile="./data/gdp.csv",mode="wb")
download.file(eduUrl, destfile="./data/edu.csv",mode="wb")
gdp<-read.csv("./data/gdp.csv",header=TRUE)
edu<-read.csv("./data/edu.csv",header=TRUE)
names(gdp)
names(edu)
gdp<-read.csv("./data/gdp.csv",header=TRUE)
gdp<-read.csv("./data/gdp.csv",header=TRUE)
edu$CountryCode
?merge
mergedData<- merge(gdp,edu,by.x="ID",by.y="CountryCode")
mergedData
head(mergedData)
names(mergedData)
edu$CountryCode
gdp$ID
mergedData<- merge(edu,gdp,by.y="ID",by.x="CountryCode")
mergedData<- merge(gdp,edu,by.x="ID",by.y="CountryCode")
nrow(mergedData)
nrow(mergedData[!is.na(mergedData$ID),])
nrow(gdp)
nrow(gdp[!is.na(mergedData$ID),])
str(gdp)
str(edu)
gdp<-read.csv("./data/gdp.csv", stringsAsFactors=FALSE, header=TRUE)
edu<-read.csv("./data/edu.csv", stringsAsFactors=FALSE, header=TRUE)
mergedData<- merge(gdp,edu,by.x="ID",by.y="CountryCode")
gdpUrl<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
download.file(gdpUrl, destfile="./data/gdp.csv",mode="wb")
gdp<-read.csv("./data/gdp.csv", stringsAsFactors=FALSE, header=FALSE)
names(gdp)<-c("CountryCode", "Ranking", "Economy", "GDP")
gdp<-gdp[6:236,]
?read.csv
gdp<-read.csv("./data/gdp.csv", stringsAsFactors=FALSE, skip=5, header=FALSE)
names(gdp)<-c("CountryCode", "Ranking", "Economy", "GDP")
gdp<-gdp[1:231,]
head(gdp)
gdp<-read.csv("./data/gdp.csv", stringsAsFactors=FALSE, skip=5, colClasses = c("NULL","Ranking","Economy"),header=FALSE)
gdp<-read.csv("./data/gdp.csv", stringsAsFactors=FALSE, skip=5, colClasses = c(NA,NA,"NULL",NA,NA),header=FALSE)
head(gdp)
gdp<-gdp[,1:4]
names(gdp)<-c("CountryCode", "Ranking", "Economy", "GDP")
tail(gdp)
tail(gdp$CountryCode)
?merge
mergedData<- merge(gdp,edu,by.x="CountryCode",by.y="CountryCode")
?read.csv
gdp<-read.csv("./data/gdp.csv", stringsAsFactors=FALSE, skip=5,
blank.lines.skip=TRUE, colClasses = c(NA,NA,"NULL",NA,NA),header=FALSE)
gdp<-gdp[,1:4]
names(gdp)<-c("CountryCode", "Ranking", "Economy", "GDP")
tail(gdp$CountryCode)
gdp<-read.csv("./data/gdp.csv", stringsAsFactors=FALSE, skip=5,
blank.lines.skip=TRUE, skipNul=TRUE, colClasses = c(NA,NA,"NULL",NA,NA),header=FALSE)
gdp<-gdp[,1:4]
names(gdp)<-c("CountryCode", "Ranking", "Economy", "GDP")
mergedData<- merge(gdp,edu,by.x="CountryCode",by.y="CountryCode")
str(gdp)
str(edu)
gdp<-read.csv("./data/gdp.csv", skip=5, blank.lines.skip=TRUE,
skipNul=TRUE, colClasses = c(NA,NA,"NULL",NA,NA),header=FALSE)
gdp<-gdp[,1:4]
names(gdp)<-c("CountryCode", "Ranking", "Economy", "GDP")
edu<-read.csv("./data/edu.csv", header=TRUE)
mergedData<- merge(gdp,edu,by.x="CountryCode",by.y="CountryCode")
mergedData$CountryCode
?match
m<-match(gdp$CountryCode,edu$CountryCode)
m
length(!is.na(m))
m<-match(gdp$CountryCode,edu$CountryCode,nomatch=FALSE)
m
length(!is.na(m))
length(m>0)
m[325]
m[228]
m[217]
length(m)
m
m<-m[m>0,]
m<-m[m>0]
m
length(m)
gdp<-read.csv("./data/gdp.csv", skip=5, blank.lines.skip=TRUE,
skipNul=TRUE, colClasses = c(NA,NA,"NULL",NA,NA),header=FALSE)
gdp<-gdp[1:190,1:4]
names(gdp)<-c("CountryCode", "Ranking", "Economy", "GDP")
edu<-read.csv("./data/edu.csv", header=TRUE)
m<-match(gdp$CountryCode,edu$CountryCode)
mergedData<- merge(gdp,edu,by.x="CountryCode",by.y="CountryCode")
m
sum(is.na(m))
sum(!is.na(m))
nrow(mergedData)
mergedData<-mergedData[order(-Ranking),]
mergedData<-mergedData[order(-mergedData$Ranking),]
mergedData
head(mergedData)
?read.csv
gdp<-read.csv("./data/gdp.csv", skip=5, blank.lines.skip=TRUE, stringsAsFactors=TRUE,
skipNul=TRUE, colClasses = c(NA,NA,"NULL",NA,NA),header=FALSE)
gdp<-gdp[1:190,1:4]
names(gdp)<-c("CountryCode", "Ranking", "Economy", "GDP")
edu<-read.csv("./data/edu.csv", header=TRUE, stringsAsFactors=TRUE)
mergedData<- merge(gdp,edu,by.x="CountryCode",by.y="CountryCode")
# number of matching IDs
nrow(mergedData)
mergedData<-mergedData[order(-as.numerci(Ranking)),]
mergedData<-mergedData[order(-as.numeric(Ranking)),]
mergedData<-mergedData[order(-as.numeric(mergedData$Ranking)),]
head(mergedData)
head(mergedData,n=1)
head(mergedData[1:2,],n=1)
tail(mergedData[1:2,],n=1)
mergedData[1:2,]
mergedData[,1:2]
?order
library(plyr)
?arrange
mergedData<-arrange(mergedData,desc(Ranking))
mergedData[,1:2]
mergedData<-arrange(mergedData,desc(as.numeric(Ranking)))
mergedData[,1:2]
mergedData<-arrange(mergedData,desc(as.numeric(as.character(Ranking))))
mergedData[,1:2]
mergedData[c(1,189),1:2]
mergedData[c(1,13,189),1:2]
mergedData[13,c("CountryCode","Economy")]
mergedData[,"Incom.Group"]
mergedData[,"Income.Group"]
?mean
mean(mergedData[mergedData$Income.Group==High income: OECD,"Ranking"],na.rm=TRUE)
mean(mergedData[mergedData$Income.Group=="High income: OECD","Ranking"],na.rm=TRUE)
mergedData[mergedData$Income.Group=="High income: OECD","Ranking"]
mergedData[mergedData$Income.Group=="High income: nonOECD","Ranking"]
length(mergedData[mergedData$Income.Group=="High income: nonOECD","Ranking"])
length(mergedData[mergedData$Income.Group=="High income: OECD","Ranking"])
mean(mergedData[mergedData$Income.Group=="High income: OECD","Ranking"])
mean(mergedData[mergedData$Income.Group=="High income: OECD",as.numeric("Ranking")],na.rm=TRUE)
mean(mergedData[mergedData$Income.Group=="High income: OECD",as.numeric(as.character("Ranking"))],na.rm=TRUE)
m<-mergedData[mergedData$Income.Group=="High income: OECD","Ranking"]
m
as.numeric(m)
mean(as.numeric(m))
as.character(m)
as.numeric(as.character(m))
mean(as.numeric(as.character(m)))
OECD<-mergedData[mergedData$Income.Group=="High income: OECD", "Ranking"]
nonOECD<-mergedData[mergedData$Income.Group=="High income: nonOECD", "Ranking"]
mean(as.numeric(as.character(OECD)))
mean(as.numeric(as.character(nonOECD)))
?quantile
quantile(mergedData$Ranking)
?cut
?quantile
install.packages("Hmisc")
library(Hmisc)
gdpGroups<-cut2(mergedData$Ranking,g=5)
library(Hmisc)
gdpGroups<-cut2(mergedData$Ranking,g=4)
gdpGroups<-cut2(as.numerci(as.character(mergedData$Ranking)),g=4)
gdpGroups<-cut2(as.numeric(as.character(mergedData$Ranking)),g=4)
table(gdpGroups)
gdpGroups<-cut2(as.numeric(as.character(mergedData$Ranking)),g=5)
table(gdpGroups,mergedData$Income.Group)
